/*
	TopZIndex 1.2 (October 21, 2010) plugin for jQuery
	http://topzindex.googlecode.com/
	Copyright (c) 2009-2011 Todd Northrop
	http://www.speednet.biz/
	Licensed under GPL 3, see  <http://www.gnu.org/licenses/>
*/
;(function(a){a.topZIndex=function(b){return Math.max(0,Math.max.apply(null,a.map((b||"*")==="*"?a.makeArray(document.getElementsByTagName("*")):a(b),function(b){return parseFloat(a(b).css("z-index"))||null})))};a.fn.topZIndex=function(b){if(this.length===0)return this;b=a.extend({increment:1},b);var c=a.topZIndex(b.selector),d=b.increment;return this.each(function(){this.style.zIndex=c+=d})}})(jQuery);

/* 
	*
	*
	jAlert v.3
	Made with love by Versatility Werks (http://flwebsites.biz)
	MIT Licensed
	*
	*
*/
;(function($){$.fn.jAlert=function(options){var alert=this,themes=['default','green','red','black','blue'],sizes=['xsm','sm','md','lg','xlg','full'],backgroundColors=['white','black'],styles=[],classes=['animated'],backgroundClasses=[];if(alert.length>1){$.fn.jAlert.debug('Multiple elements passed.');alert.each(function(){$.fn.jAlert.debug('Re-instantiating with one element');$(this).jAlert(alert.options);});return this;}
alert.options=$.extend({},$.fn.jAlert.defaults,options);$.fn.jAlert.debug('Options for this popup: '+JSON.stringify(alert.options));alert.instance=false;if(alert.options.type=='confirm')
{$.fn.jAlert.debug('Type is confirm');if(!alert.options.content)
{$.fn.jAlert.debug('No content passed. Defaulting to "'+alert.options.confirmQuestion+'"');alert.options.content=alert.options.confirmQuestion;}
alert.options.btns=[{'text':alert.options.confirmBtnText,'theme':'green','class':'confirmBtn','closeAlert':true,'onClick':alert.options.onConfirm},{'text':alert.options.denyBtnText,'theme':'red','class':'denyBtn','closeAlert':true,'onClick':alert.options.onDeny}];$.fn.jAlert.debug('Creating buttons');alert.options.autofocus=alert.options.confirmAutofocus;$.fn.jAlert.debug('Autofocus set to .confirmBtn');}
if($.inArray(alert.options.theme,themes)==-1)
{console.log('jAlert Config Error: Invalid theme selection.');return false;}
classes.push('ja_'+alert.options.theme);$.fn.jAlert.debug('Added theme to classes: '+JSON.stringify(alert.options.theme));if(!alert.options.id)
{var unique=Date.now().toString()+Math.floor(Math.random()*100000);alert.options.id='ja_'+unique;$.fn.jAlert.debug('No ID set. Creating unique: '+alert.options.id);}
if(alert.options.class)
{$.fn.jAlert.debug('Applying your custom class(es): '+JSON.stringify(alert.options.class));classes.push(alert.options.class);$.fn.jAlert.debug('Classes: '+JSON.stringify(classes));}
if(alert.options.classes)
{$.fn.jAlert.debug('Applying your custom class(es): '+JSON.stringify(alert.options.classes));classes.push(alert.options.classes);$.fn.jAlert.debug('Classes: '+JSON.stringify(classes));}
if(!alert.options.title)
{$.fn.jAlert.debug('No title set. Adding noTitle class');classes.push('ja_noTitle');$.fn.jAlert.debug('Classes: '+JSON.stringify(classes));}
if(alert.options.size&&((typeof alert.options.size=='string'&&$.inArray(alert.options.size,sizes)==-1)||(typeof alert.options.size=='object'&&(typeof alert.options.size.width=='undefined'||typeof alert.options.size.height=='undefined'))))
{console.log('jAlert Config Error: Invalid size selection (try a preset or make sure you\'re including height and width in your size object).');return false;}
else if(!alert.options.size)
{$.fn.jAlert.debug('No size indicated. Set to sm.');classes.push('ja_sm');$.fn.jAlert.debug('Classes: '+JSON.stringify(classes));}
else if(typeof alert.options.size=='object')
{$.fn.jAlert.debug('Height/Width defined. Adding to styles.');styles.push('width: '+alert.options.size.width+';');styles.push('height: '+alert.options.size.height+';');$.fn.jAlert.debug('Style: '+JSON.stringify(styles));}
else
{$.fn.jAlert.debug('Setting size to '+alert.options.sizes);classes.push('ja_'+alert.options.size);$.fn.jAlert.debug('Classes: '+JSON.stringify(classes));}
if($.inArray(alert.options.backgroundColor,backgroundColors)==-1)
{console.log('jAlert Config Error: Invalid background color selection.');return false;}
backgroundClasses.push('ja_'+alert.options.backgroundColor);$.fn.jAlert.debug('Adding background color '+alert.options.backgroundColor);if((typeof alert.options.btns=='object'||typeof alert.options.btns=='array')||alert.options.autofocus){alert.options.closeOnClick=false;$.fn.jAlert.debug('closeOnClick disabled due to having buttons or autofocus');}
alert.options.onOpen=[alert.options.onOpen];var onload="onload='$.fn.jAlert.mediaLoaded($(this))'",loader="<div class='ja_loader'>Loading...</div>";if(alert.options.image)
{$.fn.jAlert.debug('Adding Image');alert.options.content="<div class='ja_media_wrap'>"+
loader+"<img src='"+alert.options.image+"' class='ja_img' "+onload+">"+"</div>";}
else if(alert.options.video)
{$.fn.jAlert.debug('Adding Video');alert.options.content="<div class='ja_media_wrap'>"+
loader+"<div class='ja_video'>"+"</div>"+"</div>";alert.options.onOpen.unshift(function(alert){var iframe=document.createElement("iframe");iframe.src=alert.options.video;if(iframe.attachEvent){iframe.attachEvent("onload",function(){$.fn.jAlert.mediaLoaded($(this));});}else{iframe.onload=function(){$.fn.jAlert.mediaLoaded($(this));};}
alert.find('.ja_video').append(iframe);});}
else if(alert.options.iframe)
{if(!alert.options.iframeHeight)
{alert.options.iframeHeight=$(window).height()*0.9+'px';}
$.fn.jAlert.debug('Adding iFrame with height: '+alert.options.iframeHeight);alert.options.content="<div class='ja_media_wrap'>"+
loader+"</div>";alert.options.onOpen.unshift(function(alert){var iframe=document.createElement("iframe");iframe.src=alert.options.iframe;iframe.height=alert.options.iframeHeight;iframe.className='ja_iframe';if(iframe.attachEvent){iframe.attachEvent("onload",function(){$.fn.jAlert.mediaLoaded($(this));});}else{iframe.onload=function(){$.fn.jAlert.mediaLoaded($(this));};}
alert.find('.ja_media_wrap').append(iframe);});}
else if(alert.options.ajax)
{alert.options.content="<div class='ja_media_wrap'>"+
loader+"</div>";onAjaxCallbacks=alert.options.onOpen;alert.options.onOpen=[function(alert){$.fn.jAlert.debug('Getting content from '+alert.options.ajax);$.ajax(alert.options.ajax,{async:true,complete:function(jqXHR,textStatus)
{alert.find('.ja_media_wrap').replaceWith(jqXHR.responseText);$.each(onAjaxCallbacks,function(index,onAjax){onAjax(alert);});},error:function(jqXHR,textStatus,errorThrown)
{alert.options.onAjaxFail(alert,'Error getting content: Code: '+jqXHR.status+' : Msg: '+jqXHR.statusText);}});}];}
var anyAlertsVisible=function(){return $('.jAlert:visible').length;}
var hideBackground=function(){$('.ja_background').fadeOut(alert.options.backgroundFadeSpeed,function(){$(this).remove();$('body').css('overflow','auto');});}
var showBackground=function(){if($('.ja_background').length<1)
{var zIndex=$.topZIndex("*")+1;$.fn.jAlert.debug('Adding background with z-index: '+zIndex+'.');$('body').append('<div class="ja_background '+backgroundClasses.join(' ')+'" style="z-index: '+zIndex+'"></div>').fadeIn(alert.options.backgroundFadeSpeed);}
else
{$.fn.jAlert.debug('Background already exists.');}}
alert.centerAlert=function()
{var viewportHeight=$(window).height(),alertHeight=alert.instance.height(),diff=viewportHeight-alertHeight;$.fn.jAlert.debug('Centering alert. viewportHeight: '+viewportHeight+' alertHeight: '+alertHeight+' diff: '+diff);var top=diff/2;if(top>200)
{top=top-100;}
if(top<=0)
{top=0;}
$.fn.jAlert.debug('Setting margin-top '+top+'px');alert.instance.css('margin-top',top+'px');if(diff>5)
{$.fn.jAlert.debug('Diff is greater than 5px. Setting wrapper as position: fixed and body as overflow: hidden');alert.instance.parents('.ja_wrap').css('position','fixed');$('body').css('overflow','hidden');}
else
{$.fn.jAlert.debug('Diff is less than 5px. Setting wrapper as position: absolute (default) and body as overflow: auto (hopefully your default. Otherwise this can create issues)');alert.instance.parents('.ja_wrap').css('position','absolute');$('body').css('overflow','auto');$('html, body').animate({scrollTop:top-50},200);}}
var animateAlert=function(which,thisAlert){if(which=='hide')
{$.fn.jAlert.debug('Hiding alert: '+thisAlert.attr('id'));thisAlert.removeClass(alert.options.showAnimation).addClass(alert.options.hideAnimation);}
else
{$.fn.jAlert.debug('Centering + Showing alert: '+thisAlert.attr('id'));thisAlert.centerAlert();thisAlert.addClass(alert.options.showAnimation).removeClass(alert.options.hideAnimation).show();}}
var getBtnHTML=function(btn){if(typeof btn.href=='undefined'){btn.href='';}
if(typeof btn.class=='undefined'){btn.class='';}
if(typeof btn.theme=='undefined'){btn.class+=' ja_btn_default';}else{btn.class+=' ja_btn_'+btn.theme;}
if(typeof btn.text=='undefined'){btn.text='';}
if(typeof btn.id=='undefined'){var unique=Date.now().toString()+Math.floor(Math.random()*100000);btn.id='ja_btn_'+unique;}
if(typeof btn.target=='undefined'){btn.target='_self';}
if(typeof btn.closeAlert=='undefined'){btn.closeAlert=true;}
$('body').on('click','#'+btn.id,function(e){var button=$(this);if(btn.closeAlert)
{button.parents('.jAlert').closeAlert();}
var callbackResponse=true;if(typeof btn.onClick=='function')
{callbackResponse=btn.onClick(e,button);}
if(!callbackResponse||btn.closeAlert)
{e.preventDefault();return false;}
return callbackResponse;});$.fn.jAlert.debug('Creating button ');return"<a href='"+btn.href+"' id='"+btn.id+"' target='"+btn.target+"' class='ja_btn "+btn.class+"'>"+btn.text+"</a> ";}
alert.closeAlert=function(remove,onClose){var alertInstance=$(this);$.fn.jAlert.debug('- - - - CLOSING ALERT - - - -'+alertInstance.attr('id'));if(remove!=false)
{$.fn.jAlert.debug('Remove != false, so default remove to true: '+alertInstance.attr('id'));remove=true;}
if(alertInstance.length)
{alertInstance.unbind('DOMSubtreeModified');animateAlert('hide',alertInstance);window.setTimeout(function()
{var alertWrap=alertInstance.parents('.ja_wrap');if(remove)
{$.fn.jAlert.debug('Remove is true, so removing the alert\'s wrapper + alert: '+alertInstance.attr('id'));alertWrap.remove();}
else
{$.fn.jAlert.debug('Remove is false, so hiding the alert\'s wrapper + alert: '+alertInstance.attr('id'));alertWrap.hide();}
if(typeof onClose=='function')
{$.fn.jAlert.debug('Running onClose callback (passed into closeAlert): '+alertInstance.attr('id'));onClose(alertInstance);}
else if(typeof alert.options.onClose=='function')
{$.fn.jAlert.debug('Running onClose callback (set in options): '+alertInstance.attr('id'));alert.options.onClose(alertInstance);}
if(anyAlertsVisible()<1)
{$.fn.jAlert.debug('No alerts are visible: '+alertInstance.attr('id'));hideBackground();}
$.fn.jAlert.debug('- - - - DONE HIDING ALERT - - - -'+alertInstance.attr('id'));},alert.options.animationTimeout);}
return this;}
alert.showAlert=function(replaceOthers,removeOthers,onOpen,onClose){var alertInstance=$(this);$.fn.jAlert.debug('- - - - SHOWING Alert - - - -'+alertInstance.attr('id'));if(replaceOthers!=false)
{$.fn.jAlert.debug('replaceOthers != false, so default to true: '+alertInstance.attr('id'));replaceOthers=true;}
if(removeOthers!==false)
{removeOthers=true;}
if(replaceOthers)
{$.fn.jAlert.debug('Run closeAlert on all open alerts: '+alertInstance.attr('id'));$('.jAlert:visible').closeAlert(removeOthers);}
showBackground();var zIndex=$.topZIndex("*")+1,wrap=alertInstance.parents('.ja_wrap');$.fn.jAlert.debug('Setting z-index on wrapper to '+zIndex+' and showing it: '+alertInstance.attr('id'));wrap.css('z-index',zIndex).show();animateAlert('show',alertInstance);if(typeof onClose=='function')
{$.fn.jAlert.debug('Setting options onClose to one passed to showAlert: '+alertInstance.attr('id'));alert.options.onClose=onClose;}
window.setTimeout(function(){if(typeof onOpen=='function')
{$.fn.jAlert.debug('Running onOpen callback (passed to showAlert): '+alertInstance.attr('id'));onOpen(alertInstance);}
$.fn.jAlert.debug('- - - - DONE SHOWING ALERT - - - -'+alertInstance.attr('id'));},alert.options.animationTimeout);}
var addAlert=function(content){$.fn.jAlert.debug('- - - - ADDING ALERT - - - -'+alert.options.id);var html='',topMost=$('.ja_wrap:last')[0];var zIndex=$.topZIndex("*")+1;$.fn.jAlert.debug('Setting z-index to '+zIndex+' : '+alert.options.id);html+='<div class="ja_wrap" style="z-index: '+zIndex+';">'+'<div class="jAlert '+classes.join(' ')+'" style="'+styles.join(' ')+'" id="'+alert.options.id+'">'+'<div>';if(alert.options.closeBtn)
{$.fn.jAlert.debug('Adding close button: '+alert.options.id);html+="<div class='closejAlert ja_close'>X</div>";}
if(alert.options.title)
{$.fn.jAlert.debug('Adding title: '+alert.options.id);html+="<div class='ja_title'><div>"+alert.options.title+"</div></div>";}
html+='<div class="ja_body">'+content;if(alert.options.btns)
{$.fn.jAlert.debug('Adding buttons: '+alert.options.id);html+='<div class="ja_btn_wrap ';if(alert.options.btnBackground)
{$.fn.jAlert.debug('Adding button background: '+alert.options.id);html+='optBack';}
html+='">';}
if(typeof alert.options.btns[0]=='object')
{$.each(alert.options.btns,function(index,btn){if(typeof btn=='object')
{html+=getBtnHTML(btn);}});}
else if(typeof alert.options.btns=='object')
{html+=getBtnHTML(alert.options.btns);}
else if(alert.options.btns)
{console.log('jAlert Config Error: Incorrect value for btns (must be object or array of objects): '+alert.options.btns);}
if(alert.options.btns)
{html+='</div>';}
html+='</div>'+'</div>'+'</div>'+'</div>';var alertHTML=$(html);showBackground();if(alert.options.replaceOtherAlerts)
{$.fn.jAlert.debug('Replacing other alerts if any visible: '+alert.options.id);$('.jAlert:visible').closeAlert();}
$('body').append(alertHTML);alert.instance=$('#'+alert.options.id);animateAlert('show',alert.instance);if(alert.options.closeBtn){$.fn.jAlert.debug('Adding closeBtn handler: '+alert.options.id);alert.instance.on('click','.closejAlert',function(e){e.preventDefault();$(this).parents('.jAlert').closeAlert();return false;});}
if(alert.options.closeOnClick){$.fn.jAlert.debug('Adding closeOnClick handler: '+alert.options.id);$(document).off('mouseup');$(document).on('mouseup',function(e){$('.jAlert:visible').each(function(){var alert=$(this);if(alert.options.closeOnClick)
{alert.closeAlert();}});});}
if(alert.options.closeOnEsc){$.fn.jAlert.debug('Adding closeOnEsc handler: '+alert.options.id);$(document).off('keydown');$(document).on('keydown',function(e){if(e.keyCode===27){$('.jAlert:visible').each(function(){var alert=$(this);if(alert.options.closeOnEsc)
{alert.closeAlert();}});}});}
if(alert.options.onOpen)
{$.fn.jAlert.debug('Running onOpen callback(s): '+alert.options.id);$.each(alert.options.onOpen,function(index,onOpen){onOpen(alert.instance);});}
if(alert.options.autofocus)
{$.fn.jAlert.debug('Autofocusing on element: '+alert.options.id);alert.instance.find(alert.options.autofocus).focus();}
alert.instance.bind("DOMSubtreeModified",function(){alert.instance.centerAlert();});return alert.instance;};alert.initialize=function(){if(!alert.options.content&&!alert.options.image&&!alert.options.video&&!alert.options.iframe&&!alert.options.ajax)
{console.log('jAlert potential error: No content defined');return addAlert('');}
else
{if(!alert.options.content)
{alert.options.content='';}
return addAlert(alert.options.content);}}
alert.initialize();$.fn.jAlert.debug('- - - - DONE ADDING ALERT - - - -');return alert;};$.fn.jAlert.defaults={'debug':false,'title':false,'content':false,'image':false,'video':false,'ajax':false,'onAjaxFail':function(alert,errorThrown){alert.closeAlert();errorAlert(errorThrown);},'iframe':false,'iframeHeight':false,'class':'','classes':'','id':false,'showAnimation':'bounceIn','hideAnimation':'bounceOut','backgroundFadeSpeed':100,'animationTimeout':600,'theme':'default','backgroundColor':'black','size':false,'replaceOtherAlerts':false,'closeOnClick':false,'closeOnEsc':true,'closeBtn':true,'btns':false,'btnBackground':true,'autofocus':false,'onOpen':function(alert){return false;},'onClose':function(alert){return false;},'type':'modal','confirmQuestion':'Are you sure?','confirmBtnText':'Yes','denyBtnText':'No','confirmAutofocus':'.confirmBtn','onConfirm':function(e,btn){e.preventDefault();console.log('confirmed');return false;},'onDeny':function(e,btn){e.preventDefault();return false;}}
$.jAlert=function(options){return $.fn.jAlert(options);}
$.fn.alertOnClick=function(options)
{$(this).on('click',function(e){e.preventDefault();$.jAlert(options);return false;});}
$.alertOnClick=function(selector,options)
{$('body').on('click',selector,function(e){e.preventDefault();$.jAlert(options);return false;});}
$.fn.jAlert.debug=function(msg){if($.fn.jAlert.defaults.debug)
{console.log('jAlert: '+msg);}};var $jAlertResizeTimeout;$(window).resize(function(){window.clearTimeout($jAlertResizeTimeout);$jAlertResizeTimeout=window.setTimeout(function(){$('.jAlert:visible').each(function(){$(this).centerAlert();});},200);});$.fn.jAlert.mediaLoaded=function(elem){var wrap=elem.parents('.ja_media_wrap'),vid_wrap=wrap.find('.ja_video');wrap.find('.ja_loader').remove();if(vid_wrap.length>0)
{vid_wrap.fadeIn('fast');}
else
{elem.fadeIn('fast');}
elem.parents('.jAlert').centerAlert();}})(jQuery);function confirm(confirmCallback,denyCallback)
{$.jAlert({'type':'confirm','onConfirm':confirmCallback,'onDeny':denyCallback});}
function alert(title,msg){if(typeof msg=='undefined')
{msg=title;title='';}
$.jAlert({'title':title,'content':msg});}
function successAlert(title,msg){if(typeof msg=='undefined')
{msg=title;title='Success';}
$.jAlert({'title':title,'content':msg,'theme':'green'});}
function errorAlert(title,msg){if(typeof msg=='undefined')
{msg=title;title='Error';}
$.jAlert({'title':title,'content':msg,'theme':'red'});}